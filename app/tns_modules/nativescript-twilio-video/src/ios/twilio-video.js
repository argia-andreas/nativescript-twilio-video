"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var VideoActivity = (function () {
    function VideoActivity() {
    }
    VideoActivity.prototype.connect_to_room = function (roomName) {
        if (!this.accessToken)
            return;
        console.log(roomName);
        console.log(this.accessToken);
        console.dir(TVIConnectOptions);
        var optionsWithBlock = TVIConnectOptions.options;
        optionsWithBlock();
    };
    VideoActivity.prototype.configureAudio = function () {
    };
    VideoActivity.prototype.removeParticipantVideo = function () {
    };
    VideoActivity.prototype.participantListener = function () {
    };
    VideoActivity.prototype.removeParticipant = function () {
    };
    VideoActivity.prototype.addParticipantVideo = function () {
    };
    VideoActivity.prototype.addParticipant = function () {
    };
    VideoActivity.prototype.set_access_token = function (token, name) {
        this.accessToken = token;
    };
    VideoActivity.prototype.disconnect_from_room = function () {
    };
    VideoActivity.prototype.roomListener = function () {
    };
    VideoActivity.prototype.createAudioAndVideoTracks = function () {
    };
    VideoActivity.prototype.toggle_local_video = function () {
    };
    VideoActivity.prototype.toggle_local_audio = function () {
    };
    VideoActivity.prototype.destroy_local_video = function () {
    };
    VideoActivity.prototype.destroy_local_audio = function () {
    };
    return VideoActivity;
}());
exports.VideoActivity = VideoActivity;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHdpbGlvLXZpZGVvLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsidHdpbGlvLXZpZGVvLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBWUE7SUFzQkk7SUFLQSxDQUFDO0lBRU0sdUNBQWUsR0FBdEIsVUFBdUIsUUFBZ0I7UUFFbkMsRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDO1lBQUMsTUFBTSxDQUFDO1FBRTlCLE9BQU8sQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDdEIsT0FBTyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUM7UUFLOUIsT0FBTyxDQUFDLEdBQUcsQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDO1FBQy9CLElBQUksZ0JBQWdCLEdBQUcsaUJBQWlCLENBQUMsT0FBTyxDQUFDO1FBQ2pELGdCQUFnQixFQUFFLENBQUM7SUF5QnZCLENBQUM7SUFFTSxzQ0FBYyxHQUFyQjtJQUVBLENBQUM7SUFFTSw4Q0FBc0IsR0FBN0I7SUFFQSxDQUFDO0lBRU0sMkNBQW1CLEdBQTFCO0lBRUEsQ0FBQztJQUVNLHlDQUFpQixHQUF4QjtJQUVBLENBQUM7SUFFTSwyQ0FBbUIsR0FBMUI7SUFFQSxDQUFDO0lBRU0sc0NBQWMsR0FBckI7SUFFQSxDQUFDO0lBRU0sd0NBQWdCLEdBQXZCLFVBQXdCLEtBQWEsRUFBRSxJQUFZO1FBRS9DLElBQUksQ0FBQyxXQUFXLEdBQUcsS0FBSyxDQUFDO0lBRTdCLENBQUM7SUFFTSw0Q0FBb0IsR0FBM0I7SUFFQSxDQUFDO0lBRU0sb0NBQVksR0FBbkI7SUFFQSxDQUFDO0lBR00saURBQXlCLEdBQWhDO0lBRUEsQ0FBQztJQUVNLDBDQUFrQixHQUF6QjtJQUVBLENBQUM7SUFFTSwwQ0FBa0IsR0FBekI7SUFFQSxDQUFDO0lBRU0sMkNBQW1CLEdBQTFCO0lBRUEsQ0FBQztJQUVNLDJDQUFtQixHQUExQjtJQUVBLENBQUM7SUFHTCxvQkFBQztBQUFELENBQUMsQUFoSUQsSUFnSUM7QUFoSVksc0NBQWEiLCJzb3VyY2VzQ29udGVudCI6WyJcbmltcG9ydCB7IFJlbW90ZVZpZGVvIH0gZnJvbSBcIi4vcmVtb3RlVmlkZW9cIjtcbmltcG9ydCB7IExvY2FsVmlkZW8gfSBmcm9tIFwiLi9sb2NhbFZpZGVvXCI7XG5pbXBvcnQgeyBPYnNlcnZhYmxlLCBmcm9tT2JqZWN0IH0gZnJvbSAndG5zLWNvcmUtbW9kdWxlcy9kYXRhL29ic2VydmFibGUnO1xuaW1wb3J0IHsgVmlkZW9BY3Rpdml0eUJhc2UgfSBmcm9tIFwiLi4vdHdpbGlvLWNvbW1vblwiO1xuXG5cbmRlY2xhcmUgdmFyIFRWSVBhcnRpY2lwYW50LCBcbiAgICAgICAgICAgIFRWSVZpZGVvUmVuZGVyZXIsIFxuICAgICAgICAgICAgVFZJQ29ubmVjdE9wdGlvbnMsXG4gICAgICAgICAgICBUVklDb25uZWN0T3B0aW9uc0J1aWxkZXI7XG5cbmV4cG9ydCBjbGFzcyBWaWRlb0FjdGl2aXR5IGltcGxlbWVudHMgVmlkZW9BY3Rpdml0eUJhc2Uge1xuXG4gICAgcHJpdmF0ZSBUV0lMSU9fQUNDRVNTX1RPS0VOOiBzdHJpbmc7XG4gICAgcHVibGljIHByZXZpb3VzQXVkaW9Nb2RlOiBhbnk7XG4gICAgcHVibGljIGxvY2FsVmlkZW9WaWV3OiBhbnk7XG4gICAgcHVibGljIHJlbW90ZVZpZGVvVmlldzogYW55O1xuICAgIHB1YmxpYyBsb2NhbFZpZGVvVHJhY2s6IGFueTtcbiAgICBwdWJsaWMgbG9jYWxBdWRpb1RyYWNrOiBhbnk7XG4gICAgcHVibGljIGNhbWVyYUNhcHR1cmVyOiBhbnk7XG4gICAgcHVibGljIGFjY2Vzc1Rva2VuOiBzdHJpbmc7XG4gICAgcHVibGljIHJvb206IHN0cmluZztcbiAgICBwdWJsaWMgcGFydGljaXBhbnRJZGVudGl0eTogc3RyaW5nO1xuICAgIHB1YmxpYyBwcmV2aW91c01pY3JvcGhvbmVNdXRlOiBib29sZWFuO1xuICAgIHB1YmxpYyBsb2NhbFBhcnRpY2lwYW50OiBhbnk7XG4gICAgcHVibGljIGF1ZGlvTWFuYWdlcjogYW55O1xuICAgIHB1YmxpYyBuYW1lOiBzdHJpbmc7XG4gICAgcHVibGljIHZpZGVvRXZlbnQ6IE9ic2VydmFibGU7XG4gICAgcHJpdmF0ZSBfcm9vbUxpc3RlbmVyOiBhbnk7XG4gICAgcHJpdmF0ZSBfcGFydGljaXBhbnRMaXN0ZW5lcjogYW55O1xuXG5cblxuICAgIGNvbnN0cnVjdG9yKCl7XG4gICAgICAgIC8vIGxldCBsb2NhbFZpZGVvID0gbmV3IExvY2FsVmlkZW8oKTtcbiAgICAgICAgLy8gbGV0IHJlbW90ZVZpZGVvID0gbmV3IFJlbW90ZVZpZGVvKCk7XG4gICAgICAgIC8vIHRoaXMubG9jYWxWaWRlb1ZpZXcgPSBsb2NhbFZpZGVvLmdldF9sb2NhbF92aWV3KCk7XG4gICAgICAgIC8vIHRoaXMucmVtb3RlVmlkZW9WaWV3ID0gcmVtb3RlVmlkZW8uZ2V0X3JlbW90ZV92aWV3KCk7XG4gICAgfVxuXG4gICAgcHVibGljIGNvbm5lY3RfdG9fcm9vbShyb29tTmFtZTogc3RyaW5nKSB7XG5cbiAgICAgICAgaWYgKCF0aGlzLmFjY2Vzc1Rva2VuKSByZXR1cm47IC8vIGdldFRva2VuKCk7XG5cbiAgICAgICAgY29uc29sZS5sb2cocm9vbU5hbWUpO1xuICAgICAgICBjb25zb2xlLmxvZyh0aGlzLmFjY2Vzc1Rva2VuKTtcblxuICAgICAgICAvLyBzZWxmLnByZXBhcmVMb2NhbE1lZGlhKClcbiAgICAgICAgLy8gUHJlcGFyaW5nIHRoZSBjb25uZWN0IG9wdGlvbnMgd2l0aCB0aGUgYWNjZXNzIHRva2VuIHRoYXQgd2UgZmV0Y2hlZCAob3IgaGFyZGNvZGVkKS5cbiAgICAgICAgLy8gY29uc29sZS5sb2coVFZJQ29ubmVjdE9wdGlvbnMub3B0aW9uc1dpdGhUb2tlbik7XG4gICAgICAgIGNvbnNvbGUuZGlyKFRWSUNvbm5lY3RPcHRpb25zKTtcbiAgICAgICAgbGV0IG9wdGlvbnNXaXRoQmxvY2sgPSBUVklDb25uZWN0T3B0aW9ucy5vcHRpb25zO1xuICAgICAgICBvcHRpb25zV2l0aEJsb2NrKCk7ICAgICAgICBcbiAgICAgICAgLy8gbGV0IGNvbm5lY3RPcHRpb25zID0gVFZJQ29ubmVjdE9wdGlvbnMuaW5pdCgpO1xuICAgICAgICAvLyBjb25zb2xlLmxvZyhjb25uZWN0T3B0aW9ucyk7XG4gICAgICAgIC8vIGxldCBjb25uZWN0T3B0aW9ucyA9IFRWSUNvbm5lY3RPcHRpb25zLmluaXQodGhpcy5hY2Nlc3NUb2tlbiwgZnVuY3Rpb24oYnVpbGRlcikge1xuICAgICAgICAvLyAgICAgY29uc29sZS5kaXIoYnVpbGRlcik7XG4gICAgICAgIC8vIH0pIC8veyAoYnVpbGRlcikgaW5cblxuICAgICAgICAvLyBjb25uZWN0T3B0aW9ucy5idWlsZGVyLmF1ZGlvVHJhY2tzID0gXG4gICAgICAgICAgICAvLyBVc2UgdGhlIGxvY2FsIG1lZGlhIHRoYXQgd2UgcHJlcGFyZWQgZWFybGllci5cbiAgICAgICAgLy8gYnVpbGRlci5hdWRpb1RyYWNrcyA9IHNlbGYubG9jYWxBdWRpb1RyYWNrICE9IG5pbCA/IFtzZWxmLmxvY2FsQXVkaW9UcmFjayFdIDogW1RWSUxvY2FsQXVkaW9UcmFja10oKVxuICAgICAgICAvLyBidWlsZGVyLnZpZGVvVHJhY2tzID0gc2VsZi5sb2NhbFZpZGVvVHJhY2sgIT0gbmlsID8gW3NlbGYubG9jYWxWaWRlb1RyYWNrIV0gOiBbVFZJTG9jYWxWaWRlb1RyYWNrXSgpXG5cbiAgICAgICAgLy8gLy8gVGhlIG5hbWUgb2YgdGhlIFJvb20gd2hlcmUgdGhlIENsaWVudCB3aWxsIGF0dGVtcHQgdG8gY29ubmVjdCB0by4gUGxlYXNlIG5vdGUgdGhhdCBpZiB5b3UgcGFzcyBhbiBlbXB0eVxuICAgICAgICAvLyAvLyBSb29tIGBuYW1lYCwgdGhlIENsaWVudCB3aWxsIGNyZWF0ZSBvbmUgZm9yIHlvdS4gWW91IGNhbiBnZXQgdGhlIG5hbWUgb3Igc2lkIGZyb20gYW55IGNvbm5lY3RlZCBSb29tLlxuICAgICAgICAvLyBidWlsZGVyLnJvb21OYW1lID0gc2VsZi5yb29tVGV4dEZpZWxkLnRleHRcbiAgICAvLyB9XG5cbiAgICAvLyBDb25uZWN0IHRvIHRoZSBSb29tIHVzaW5nIHRoZSBvcHRpb25zIHdlIHByb3ZpZGVkLlxuICAgIC8vIHJvb20gPSBUd2lsaW9WaWRlby5jb25uZWN0KHdpdGg6IGNvbm5lY3RPcHRpb25zLCBkZWxlZ2F0ZTogc2VsZilcbiAgICAgICAgXG4gICAgLy8gbG9nTWVzc2FnZShtZXNzYWdlVGV4dDogXCJBdHRlbXB0aW5nIHRvIGNvbm5lY3QgdG8gcm9vbSBcXChTdHJpbmcoZGVzY3JpYmluZzogc2VsZi5yb29tVGV4dEZpZWxkLnRleHQpKVwiKVxuXG4gICAgLy8gc2VsZi5zaG93Um9vbVVJKGluUm9vbTogdHJ1ZSlcbiAgICAvLyBzZWxmLmRpc21pc3NLZXlib2FyZCgpICAgICAgICBcblxuICAgIH1cblxuICAgIHB1YmxpYyBjb25maWd1cmVBdWRpbygpIHtcblxuICAgIH1cblxuICAgIHB1YmxpYyByZW1vdmVQYXJ0aWNpcGFudFZpZGVvKCkge1xuXG4gICAgfVxuXG4gICAgcHVibGljIHBhcnRpY2lwYW50TGlzdGVuZXIoKSB7XG5cbiAgICB9XG5cbiAgICBwdWJsaWMgcmVtb3ZlUGFydGljaXBhbnQoKSB7XG5cbiAgICB9XG5cbiAgICBwdWJsaWMgYWRkUGFydGljaXBhbnRWaWRlbygpIHtcblxuICAgIH1cblxuICAgIHB1YmxpYyBhZGRQYXJ0aWNpcGFudCgpIHtcblxuICAgIH1cblxuICAgIHB1YmxpYyBzZXRfYWNjZXNzX3Rva2VuKHRva2VuOiBzdHJpbmcsIG5hbWU6IHN0cmluZykge1xuXG4gICAgICAgIHRoaXMuYWNjZXNzVG9rZW4gPSB0b2tlbjtcblxuICAgIH1cblxuICAgIHB1YmxpYyBkaXNjb25uZWN0X2Zyb21fcm9vbSgpIHtcblxuICAgIH1cblxuICAgIHB1YmxpYyByb29tTGlzdGVuZXIoKSB7XG5cbiAgICB9XG5cblxuICAgIHB1YmxpYyBjcmVhdGVBdWRpb0FuZFZpZGVvVHJhY2tzKCkge1xuICAgICAgICAvLyBUVklDYW1lcmFDYXB0dXJlclxuICAgIH1cblxuICAgIHB1YmxpYyB0b2dnbGVfbG9jYWxfdmlkZW8oKSB7XG5cbiAgICB9XG5cbiAgICBwdWJsaWMgdG9nZ2xlX2xvY2FsX2F1ZGlvKCkge1xuXG4gICAgfVxuXG4gICAgcHVibGljIGRlc3Ryb3lfbG9jYWxfdmlkZW8oKSB7XG5cbiAgICB9XG5cbiAgICBwdWJsaWMgZGVzdHJveV9sb2NhbF9hdWRpbygpIHtcblxuICAgIH1cblxuXG59Il19